//------------------------------------------------------------------------------
// <auto-generated>
// </auto-generated>
//------------------------------------------------------------------------------
using GameFrame;
using UnityEngine;
public static class AutoWorldRotate
{
    
    public static void AddWorldRotate(this ECSEntity ecsEntity)
    {
        ecsEntity.AddComponent(Components.WorldRotate);
    }
    
    public static void AddWorldRotate(this ECSEntity ecsEntity,UnityEngine.Quaternion param)
    {
        var p  =  (GXGame.WorldRotate)ecsEntity.AddComponent(Components.WorldRotate);
        p.Value = param;
    }
          
    public static GXGame.WorldRotate GetWorldRotate(this ECSEntity ecsEntity)
    {
        return (GXGame.WorldRotate)ecsEntity.GetComponent(Components.WorldRotate);
    }
     
    public static ECSEntity SetWorldRotate(this ECSEntity ecsEntity,UnityEngine.Quaternion param)
    {
        var p = (GXGame.WorldRotate)ecsEntity.GetComponent(Components.WorldRotate);
        p.Value = param;
        ((World)ecsEntity.Parent).Reactive(Components.WorldRotate, ecsEntity);
        View view = ecsEntity.GetView();
        if (view == null) return null;
        ((GXGame.IWorldRotate) (view.Value)).WorldRotate(p);
        return ecsEntity;
    }
         
}